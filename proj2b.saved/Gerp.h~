// Comp 15, Project 2 Final Submission, Gerp.h

// Annamira O'Toole 11/21/16  

#ifndef GERP_H_
#define GERP_H_

#include <vector>
#include <string>
#include <set>
#include <map>

//#include "KeyValueMap.h"
#include "LineInventory.h"
#include "FSTree.h"
#include "DirNode.h"
#include "TypeDefs.h"

class Gerp
{

 public:

    Gerp();
    ~Gerp();

    void construct_AllPaths(string directory); // uses treeTraversal alg
    // from Proj 2 Part 2

    void construct_AllLines();

    void construct_answers();

    lineindex_t *process_file(ifstream &openFile);

 private:
    
    // DATA MEMBERS

    // CHANGE

    map<word_t, answerhits_t> AllAnswers; // all case sensitive answers

    map<word_t, answerhits_t> InsensitiveAnswers; // all case insensitive
    // answers

    vector<filepath_t> AllPaths; // vector of all file paths in given 
    // directory

    vector<lineindex_t> AllLines; // vector of line indices, one for each
    // file

    //KeyValueMap wordsFound = KeyValueMap(string, vector<LinePath>); // maps
    // word found in directory to vector of LinePaths 

    // CHANGE wordsFound

    // std::map<string, vector<LinePath>> wordsFound;

    //KeyValueMap lineLookup = KeyValueMap(string, LineInventory); // maps
    // file paths to LineInventory of that file

    // CHANGE lineLookup

    // std::map<string, LineInventory> lineLookup;



    // PRIVATE MEMBER FUNCTIONS


};

#endif
